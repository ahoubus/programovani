class_name Shooter

extends CharacterBody2D

enum State {
	PASSIVE,
	FOLLOW,
	SHOOT,
	WARN
}

@export var speed = 150
@export var health = 40
var can_shoot = false
var state := State.PASSIVE
var player: Player

var bullet := preload("res://bullet.tscn")
var point := preload("res://point.tscn")

var timer := 0.0
var timer_stopped := true

func _ready() -> void:
	player = Player.instance
	state = State.PASSIVE

func _physics_process(delta: float) -> void:
	if state == State.FOLLOW:
		velocity = (player.position - position).normalized() * speed
	else:
		velocity = Vector2.ZERO

	move_and_slide()

func start_timer(time: float):
	timer = time
	timer_stopped = false

func _process(delta: float) -> void:
	if velocity.length_squared() > 0.1:
		$Sprite2D.rotation = velocity.angle() + PI / 2
	else:
		$Sprite2D.rotation = position.angle_to_point(player.position) + PI / 2
	
	if state == State.FOLLOW and (player.position - position).length_squared() < 200*200:
		#state = State.SHOOT
		start_timer(randi_range(0.5, 2.5))
		if timer <= 0.0:
			state == State.WARN
			timer_stopped = true
		#$Warning_timer.start(randi_range(0.5, 2.5))
	elif state == State.SHOOT:
		if can_shoot == true:
			shoot()
			can_shoot = false
			if timer <= 0.0:
				state == State.WARN
				timer_stopped = true
			#$Warning_timer.start(randi_range(0.5, 2.5))
	elif state == State.WARN:
		start_timer(0.5)
		if timer <= 0.0:
			state == State.SHOOT
			timer_stopped = true
	$Healthbar.size.x = remap(health, 0, 40, 0, 44)
	if health <= 0:
		die()
		
	
	
	if not timer_stopped and timer >= 0.0:
		timer -= delta

func shoot():
	var instance = bullet.instantiate()
	instance.position = position
	get_tree().root.add_child(instance)
	
func die():
	var instance = point.instantiate()
	instance.position = position
	get_tree().root.add_child(instance)
	queue_free()

func _on_ouchrea_area_entered(area: Area2D) -> void:
	if area is Red_sword:
		health -= player.damage
	if area is Purple_sword:
		timer_stopped = true

func _on_player_detection_body_entered(body: Node2D) -> void:
	if body is Player:
		if state == State.SHOOT: return
		state = State.FOLLOW


#func _on_warning_timer_timeout() -> void:
	#$Sprite2D.frame = 1
	#$Shoot_timer.start()


#func _on_shoot_timer_timeout() -> void:
	#$Sprite2D.frame = 0
	#can_shoot = true


func _on_player_detection_body_exited(body: Node2D) -> void:
	if body is Player:
		state = State.FOLLOW
